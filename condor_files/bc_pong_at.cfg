# Universe should always be 'vanilla' unless you know explicitly what you're doing
universe = vanilla

# this sets the environment variables of the login environment to the compute node environment
# generally, you will wcheetah to leave this set to true
getenv = true

env_id = PongNoFrameskip-v4
algo = ppo
bc_algo = ppo
adaptive_temp = 1
# seed = 3
# bc_epochs = 100
# bc_batch_size = 64
# bc_hidden_size = 64
# bc_ent_weight = 0.00
# bc_l2_weight = 0.00


arguments = $(env_id) $(algo) $(seed) $(expert_episodes) $(bc_algo) $(bc_epochs) $(bc_batch_size) $(bc_hidden_size) $(bc_ent_weight) $(bc_l2_weight) $(rho) $(adaptive_temp)
executable = launch_files/bc_train_atari.sh

# this is the name and location of the Condor logs for your job. This will show details of what Condor itself is doing in relation to your job, but not the output of your job (for that, see the next entries)

log = /home/zli911/imitation/logs/$(env_id)/bc_log_$(bc_algo)_$(expert_episodes).log
output = /home/zli911/imitation/logs/$(env_id)/bc_log_$(bc_algo)_$(expert_episodes).out
error = /home/zli911/imitation/logs/$(env_id)/bc_log_$(bc_algo)_$(expert_episodes).error


notification = error
notification = complete
notify_user = zli911@gatech.edu

# If you need a specific amount of memory, Change this number to the minimum amount of RAM you need for your job. This number is in megabytes.

request_memory=4096

# If you need more than one CPU, Uncomment and change this number to the number of cores you need. The more CPUs you request the longer the job will take to queue.

request_gpus=0
# the queue command is REQUIRED
# if you need to run this more than once, enter the number of copies after the queue command
# for every copy spawned, the variable $(process) will increment by one, starting at zero. 
# if you only wish this to run once, leave the queue command with no number. 
# for example "queue 50" will spawn 50 copies of this job

queue seed,expert_episodes,bc_epochs,bc_batch_size,bc_hidden_size,bc_ent_weight,bc_l2_weight,rho from param_files/bc_params_at
# queue expert_episodes in 1